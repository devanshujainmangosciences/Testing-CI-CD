/**
 * Module defining type of form fields for applicant complete application step2
 */
import i18n from '../../../../i18n';
import {downArrorIcon} from 'assets/icons';
import {validateMonth} from 'utils';

export const financialInfoFieldsArray = [
  {
    valueKey: 'bankAccountNumber',
    required: true,
    inputType: 'textInput',
    placeholder: 'bankAccountNumber',
    errorMessageKey: 'bankAccountNumberError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    valueKey: 'bankName',
    inputType: 'textInput',
    required: true,
    placeholder: 'bankName',
    errorMessageKey: 'bankNameError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    valueKey: 'bankBranch',
    required: true,
    inputType: 'textInput',
    placeholder: 'bankBranch',
    errorMessageKey: 'bankBranchError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    valueKey: 'bankIfscCode',
    inputType: 'textInput',
    required: true,
    placeholder: 'bankIFSCCode',
    errorMessageKey: 'bankIfscCodeError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
];

export const professionalInfoFieldArray = [
  {
    inputType: 'dropdown',
    valueKey: 'occupation',
    dropdownValue: 'occupation',
    rightInputIcon: downArrorIcon,
    placeholder: 'occupation',
    errorMessageKey: 'occupationError',
    isOtherOptionAvailable: false,
  },
];

export const selfEmployedFields = [
  {
    inputType: 'dropdown',
    valueKey: 'professionName',
    dropdownValue: 'professionName',
    rightInputIcon: downArrorIcon,
    placeholder: 'professionName',
    errorMessageKey: 'professionNameError',
    isOtherOptionAvailable: true,
  },
  {
    valueKey: 'experience',
    inputType: 'textInput',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
    yearInputs: [
      {
        valueKey: 'experienceYears',
        required: true,
        inputType: 'textInput',
        placeholder: 'Years',
        errorMessageKey: 'experienceYearsError',
        validationFunction: null,
        validationErrorMessage: '',
        keyboardType: 'numeric',
      },
      {
        valueKey: 'experienceMonths',
        required: true,
        inputType: 'textInput',
        placeholder: 'Months',
        errorMessageKey: 'experienceMonthsError',
        validationFunction: validateMonth,
        validationErrorMessage:
          i18n.t('validationMessages:pleaseEnterValid') +
          i18n.t('completeLoan:month'),
        keyboardType: 'numeric',
        maxLength: 2,
      },
    ],
  },
  {
    valueKey: 'grossAnnualIncome',
    inputType: 'textInput',
    placeholder: 'grossAnnualIncome',
    errorMessageKey: 'grossAnnualIncomeError',
    convertToInt: true,
    keyboardType: 'numeric',
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    inputType: 'dropdown',
    valueKey: 'primaryBank',
    dropdownValue: 'primaryBank',
    rightInputIcon: downArrorIcon,
    placeholder: 'primaryBank',
    errorMessageKey: 'primaryBankError',
    isOtherOptionAvailable: 'false',
  },
  {
    inputType: 'dropdown',
    valueKey: 'residenceType',
    dropdownValue: 'residenceType',
    rightInputIcon: downArrorIcon,
    placeholder: 'residenceType',
    errorMessageKey: 'residenceTypeError',
    isOtherOptionAvailable: false,
  },
];

export const salariedPrivateFields = [
  {
    inputType: 'dropdown',
    valueKey: 'employerName',
    dropdownValue: 'employerName',
    rightInputIcon: downArrorIcon,
    placeholder: 'employerName',
    errorMessageKey: 'employerNameError',
    isOtherOptionAvailable: true,
  },
  {
    valueKey: 'netMonthlyIncome',
    inputType: 'textInput',
    placeholder: 'netMonthlyIncome',
    errorMessageKey: 'netMonthlyIncomeError',
    convertToInt: true,
    keyboardType: 'numeric',
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    inputType: 'dropdown',
    valueKey: 'salaryBankAccount',
    dropdownValue: 'salaryBankAccount',
    rightInputIcon: downArrorIcon,
    placeholder: 'salaryACwithBank',
    errorMessageKey: 'salaryBankAccountError',
    isOtherOptionAvailable: false,
  },
  {
    valueKey: 'tenureAtCompany',
    inputType: 'textInput',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
    yearInputs: [
      {
        valueKey: 'tenureYears',
        required: true,
        inputType: 'textInput',
        placeholder: 'Years',
        errorMessageKey: 'tenureYearsError',
        validationFunction: null,
        validationErrorMessage: '',
        keyboardType: 'numeric',
      },
      {
        valueKey: 'tenureMonths',
        required: true,
        inputType: 'textInput',
        placeholder: 'Months',
        errorMessageKey: 'tenureMonthsError',
        validationFunction: validateMonth,
        validationErrorMessage:
          i18n.t('validationMessages:pleaseEnterValid') +
          i18n.t('completeLoan:month'),
        keyboardType: 'numeric',
        maxLength: 2,
      },
    ],
  },
  {
    valueKey: 'totalWorkExperience',
    inputType: 'textInput',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
    yearInputs: [
      {
        valueKey: 'workExperienceYears',
        required: true,
        inputType: 'textInput',
        placeholder: 'Years',
        errorMessageKey: 'workExperienceYearsError',
        validationFunction: null,
        validationErrorMessage: '',
        keyboardType: 'numeric',
      },
      {
        valueKey: 'workExperienceMonths',
        required: true,
        inputType: 'textInput',
        placeholder: 'Months',
        errorMessageKey: 'workExperienceMonthsError',
        validationFunction: validateMonth,
        validationErrorMessage:
          i18n.t('validationMessages:pleaseEnterValid') +
          i18n.t('completeLoan:month'),
        keyboardType: 'numeric',
        maxLength: 2,
      },
    ],
  },
  {
    inputType: 'dropdown',
    valueKey: 'residenceType',
    dropdownValue: 'residenceType',
    rightInputIcon: downArrorIcon,
    placeholder: 'residenceType',
    errorMessageKey: 'residenceTypeError',
    isOtherOptionAvailable: false,
  },
  {
    valueKey: 'anyOtherAsset',
    inputType: 'textInput',
    required: true,
    placeholder: 'anyOtherAssets',
    errorMessageKey: 'anyOtherAssetError',
    keyboardType: 'default',
  },
];

export const businessOwnerFields = [
  {
    inputType: 'dropdown',
    valueKey: 'companyType',
    dropdownValue: 'companyType',
    rightInputIcon: downArrorIcon,
    placeholder: 'companyType',
    errorMessageKey: 'companyTypeError',
    isOtherOptionAvailable: false,
  },
  {
    valueKey: 'companyName',
    inputType: 'textInput',
    placeholder: 'companyName',
    errorMessageKey: 'companyNameError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    inputType: 'dropdown',
    valueKey: 'natureOfBusiness',
    dropdownValue: 'natureOfBusiness',
    rightInputIcon: downArrorIcon,
    placeholder: 'natureOfBusiness',
    errorMessageKey: 'natureOfBusinessError',
    isOtherOptionAvailable: false,
  },
  {
    inputType: 'dropdown',
    valueKey: 'industryType',
    dropdownValue: 'industryType',
    rightInputIcon: downArrorIcon,
    placeholder: 'industryType',
    errorMessageKey: 'industryTypeError',
    isOtherOptionAvailable: true,
  },
  {
    valueKey: 'yearsInBusiness',
    inputType: 'textInput',
    required: true,
    placeholder: 'yearsInBusiness',
    errorMessageKey: 'yearsInBusinessError',
    keyboardType: 'numeric',
    convertToInt: true,
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    valueKey: 'monthInBusiness',
    inputType: 'textInput',
    required: true,
    placeholder: 'monthInBusiness',
    errorMessageKey: 'monthInBusinessError',
    keyboardType: 'numeric',
    validationFunction: validateMonth,
    validationErrorMessage:
      i18n.t('validationMessages:pleaseEnterValid') +
      i18n.t('completeLoan:month'),
    convertToInt: true,
  },
  {
    valueKey: 'sales',
    inputType: 'textInput',
    required: true,
    placeholder: 'sales',
    errorMessageKey: 'salesError',
    convertToInt: true,
    keyboardType: 'numeric',
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    valueKey: 'annualProfit',
    inputType: 'textInput',
    required: true,
    placeholder: 'annualProfit',
    errorMessageKey: 'annualProfitError',
    keyboardType: 'numeric',
    convertToInt: true,
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    inputType: 'dropdown',
    valueKey: 'mainBankerOfCompany',
    dropdownValue: 'mainBankerOfCompany',
    rightInputIcon: downArrorIcon,
    placeholder: 'mainBankerOfCompany',
    errorMessageKey: 'mainBankerOfCompanyError',
    isOtherOptionAvailable: false,
  },
  {
    inputType: 'dropdown',
    valueKey: 'residenceType',
    dropdownValue: 'residenceType',
    rightInputIcon: downArrorIcon,
    placeholder: 'residenceType',
    errorMessageKey: 'residenceTypeError',
    isOtherOptionAvailable: false,
  },
];
