/**
 * Module defining type of form fields for edit profile
 */

import i18n from '../../../i18n';
import {downArrorIcon, calendarIcon} from 'assets/icons';
import {
  dobValidator,
  validateEmail,
  validateMobile,
  aadharValidator,
  panValidator,
} from 'utils';

export const personalInfoFieldsArray = [
  {
    required: true,
    inputType: 'textInput',
    placeholder: 'firstName',
    valueKey: 'firstName',
    errorMessageKey: 'firstNameError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: false,
    inputType: 'textInput',
    valueKey: 'middleName',
    placeholder: 'middleName',
    errorMessageKey: 'middleNameError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: true,
    inputType: 'textInput',
    valueKey: 'lastName',
    placeholder: 'lastName',
    errorMessageKey: 'lastNameError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'gender',
    dropdownValue: 'gender',
    rightInputIcon: downArrorIcon,
    placeholder: 'gender',
    errorMessageKey: 'genderError',
  },
  {
    required: true,
    inputType: 'calendar',
    valueKey: 'birthDate',
    rightInputIcon: calendarIcon,
    placeholder: 'dob',
    validationFunction: dobValidator,
    validationErrorMessage: i18n.t('completeProfile:invalidDob'),
    errorMessageKey: 'birthDateError',
  },
  {
    required: false,
    valueKey: 'username',
    placeholder: 'username',
    inputType: 'textInput',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: false,
    keyboardType: 'number-pad',
    inputType: 'textInput',
    valueKey: 'mobile',
    validationFunction: validateMobile,
    validationErrorMessage:
      i18n.t('validationMessages:pleaseEnterValid') +
      i18n.t('completeProfile:mobile'),
    placeholder: 'mobile',
    errorMessageKey: 'mobileError',
  },
  {
    required: false,
    valueKey: 'email',
    autoCapitalize: 'none',
    inputType: 'textInput',
    keyboardType: 'email-address',
    validationFunction: validateEmail,
    validationErrorMessage:
      i18n.t('validationMessages:pleaseEnterValid') +
      i18n.t('completeProfile:email'),
    placeholder: 'email',
    errorMessageKey: 'emailError',
  },
];

export const addressInfoFieldsArray = [
  {
    valueKey: 'presentAddress',
    required: true,
    inputType: 'textInput',
    placeholder: 'presentAddress',
    errorMessageKey: 'presentAddressError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'presentCountry',
    dropdownValue: 'presentCountry',
    rightInputIcon: downArrorIcon,
    placeholder: 'presentCountry',
    errorMessageKey: 'presentCountryError',
  },
  {
    inputType: 'dropdown',
    valueKey: 'presentStateName',
    dropdownValue: 'presentStateName',
    rightInputIcon: downArrorIcon,
    required: true,
    placeholder: 'presentState',
    onChangeTextKey: 'presentState',
    errorMessageKey: 'presentStateError',
  },
  {
    inputType: 'dropdown',
    valueKey: 'presentCity',
    dropdownValue: 'presentCity',
    required: true,
    rightInputIcon: downArrorIcon,
    placeholder: 'presentCity',
    errorMessageKey: 'presentCityError',
  },
  {
    keyboardType: 'number-pad',
    valueKey: 'presentPinCode',
    inputType: 'textInput',
    required: true,
    placeholder: 'presentPinCode',
    errorMessageKey: 'presentPinCodeError',
    validationFunction: null,
    validationErrorMessage: '',
  },
  {
    inputType: 'radio',
  },
  {
    valueKey: 'permanentAddress',
    required: true,
    inputType: 'textInput',
    placeholder: 'permanentAddress',
    errorMessageKey: 'permanentAddressError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'permanentCountry',
    dropdownValue: 'permanentCountry',
    rightInputIcon: downArrorIcon,
    placeholder: 'permanentCountry',
    errorMessageKey: 'permanentCountryError',
  },
  {
    inputType: 'dropdown',
    valueKey: 'permanentStateName',
    dropdownValue: 'permanentStateName',
    rightInputIcon: downArrorIcon,
    required: true,
    placeholder: 'permanentState',
    onChangeTextKey: 'permanentState',
    errorMessageKey: 'permanentStateError',
  },
  {
    inputType: 'dropdown',
    valueKey: 'permanentCity',
    dropdownValue: 'permanentCity',
    required: true,
    rightInputIcon: downArrorIcon,
    placeholder: 'permanentCity',
    errorMessageKey: 'permanentCityError',
  },
  {
    valueKey: 'permanentPinCode',
    keyboardType: 'number-pad',
    inputType: 'textInput',
    required: true,
    placeholder: 'permanentPinCode',
    errorMessageKey: 'permanentPinCodeError',
    validationFunction: null,
    validationErrorMessage: '',
  },
];
export const medicationInfoFieldsArray = [
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'typeOfCancerId',
    dropdownValue: 'typeOfCancerId',
    rightInputIcon: downArrorIcon,
    placeholder: 'typeofCancer',
    errorMessageKey: 'typeOfCancerIdError',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'drugIdName',
    dropdownValue: 'drugIdName',
    rightInputIcon: downArrorIcon,
    placeholder: 'drugName',
    onChangeTextKey: 'drugId',
    errorMessageKey: 'drugIdError',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'hospitalIdName',
    dropdownValue: 'hospitalIdName',
    rightInputIcon: downArrorIcon,
    placeholder: 'hospitalName',
    onChangeTextKey: 'hospitalId',
    errorMessageKey: 'hospitalIdError',
  },
  {
    required: true,
    inputType: 'dropdown',
    valueKey: 'doctorIdName',
    dropdownValue: 'doctorIdName',
    rightInputIcon: downArrorIcon,
    placeholder: 'doctorName',
    onChangeTextKey: 'doctorId',
    errorMessageKey: 'doctorIdError',
  },
  {
    valueKey: 'mrn',
    inputType: 'textInput',
    required: true,
    placeholder: 'MRN',
    errorMessageKey: 'mrnError',
    validationFunction: null,
    validationErrorMessage: '',
    keyboardType: 'default',
  },
];
export const financialInfoFieldsArray = [
  {
    valueKey: 'aadharNumber',
    inputType: 'textInput',
    placeholder: 'aadharNumber',
    errorMessageKey: 'aadharNumberError',
    keyboardType: 'numeric',
    validationFunction: aadharValidator,
    validationErrorMessage:
      i18n.t('validationMessages:pleaseEnterValid') +
      i18n.t('completeProfile:aadharNumber'),
  },
  {
    valueKey: 'panNumber',
    inputType: 'textInput',
    required: true,
    placeholder: 'panNumber',
    errorMessageKey: 'panNumberError',
    validationFunction: panValidator,
    validationErrorMessage:
      i18n.t('validationMessages:pleaseEnterValid') +
      i18n.t('completeProfile:panNumber'),
    keyboardType: 'default',
  },
];
