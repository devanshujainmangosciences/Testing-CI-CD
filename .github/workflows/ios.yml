name: iOS Build

on:
  push:
    branches:
      - 'develop'
      # - 'pre-prod'

jobs:
  ios-build-dev:
    name: iOS Build Dev
    environment: 'dev'
    runs-on: macOS-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Cache Pods
        uses: actions/cache@v2
        id: cocoapods-cache
        with:
          path: |
            **/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        run: cd ios && pod install && cd ..

      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: 'Run Bundler'
        run: yarn start-cd-dev

      - name: Xcode Version
        run: /usr/bin/xcodebuild -version

      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ios/VBC.xcodeproj
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: 'Apple Development'
          export-method: 'development'
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          workspace-path: ios/VBC.xcworkspace
          scheme: VBC

      - name: Upload IPA
        id: uploadArtifact
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: output.ipa

  ipa-deploy-dev:
    env:
      commitmsg: ${{ github.event.head_commit.message }}
    name: ipa deploy dev
    environment: 'dev'
    needs: ios-build-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: output

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.IOS_FIREBASE_APP_ID_DEV }}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: mango-internal-team
          file: output.ipa
          releaseNotes: ${{env.commitmsg}}

  ios-build-test:
    name: iOS Build Test
    environment: 'test'
    runs-on: macOS-latest
    if: github.ref == 'refs/heads/pre-prod'

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Cache Node Modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Cache Pods
        uses: actions/cache@v2
        id: cocoapods-cache
        with:
          path: |
            **/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        run: cd ios && pod install --repo-update && cd ..

      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: 'Run Bundler'
        run: yarn start-cd-test

      - name: Xcode Version
        run: /usr/bin/xcodebuild -version

      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ios/VBC.xcodeproj
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: 'Apple Development'
          export-method: 'development'
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          workspace-path: ios/VBC.xcworkspace
          scheme: VBC

      - name: Upload IPA
        id: uploadArtifact
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: output.ipa

  ipa-deploy-test:
    env:
      commitmsg: ${{ github.event.head_commit.message }}
    name: ipa deploy test
    environment: 'test'
    needs: ios-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/pre-prod'

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: output

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.IOS_FIREBASE_APP_ID_TEST }}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: mango-internal-team
          file: output.ipa
          releaseNotes: ${{env.commitmsg}}
